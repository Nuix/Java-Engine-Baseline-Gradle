/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Nuix.Baseline;

import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test
    void checkEnvironment() {
        App ourApp = new App();
        assertNotNull(ourApp.checkEnvironment(), "PATH IS NULL");
        assert !(ourApp.checkEnvironment().toLowerCase().contains("engine/lib")) : "Engine Libs not in path";
        assert !(ourApp.checkEnvironment().toLowerCase().contains("engine/bin")) : "Engine Bin not in path";
    }

    private String checkSwitch(List<String> jvmArgs,String switchName)
    {
        for (String jvmArg : jvmArgs) {
            System.out.println(jvmArg);
            if(jvmArg.startsWith(switchName))
            {
                File switchDirectory=new File(jvmArg.split("=")[1]);
                if (switchDirectory.exists() && switchDirectory.isDirectory()) {
                    return null;
                }
                else {
                    return(String.format("The switch '%s' is supplied but does not point to a directory",switchName));
                }
            }
        }
        return(String.format("The switch '%s' was not supplied",switchName));
    }

    @Test
    void checkBuildEnvironment() {
        App ourApp = new App();
        List<String> jvmArgs = ourApp.checkBuildEnvironment();
        for (String expectedSwitch : (new String[]{"-Dnuix.libdir=","-Dnuix.logdir=","-Dnuix.userDataBase="})) {
            String anyIssue=checkSwitch(jvmArgs,expectedSwitch);
            assertNull(anyIssue,anyIssue);
        }
    }

    @Test
    void configureLogger() {
        App ourApp = new App();
        assert ourApp.configureLogger() : "Could not configure logger";
    }

    @Test
    void checkEngine() {
        App ourApp=new App();
        ourApp.checkEngine();
    }
}
